<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20193.19.0821.2225                               -->
<workbook original-version='18.1' source-build='2019.3.0 (20193.19.0821.2225)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts ignorable='true' predowngraded='true' />
    <MapboxVectorStylesAndLayers />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Sheet1 (Global Number)' inline='true' name='federated.1at2ff5096t53y196j3a5119ok1p' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Global Number' name='excel-direct.1p2gs8g13kvxka1eweqpe0rj17ox'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/prade/OneDrive/Desktop/Pramod/Covid19_Project/Tableau/Global Number.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1p2gs8g13kvxka1eweqpe0rj17ox' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='Total_Cases' ordinal='0' />
            <column datatype='integer' name='Total_Deaths' ordinal='1' />
            <column datatype='real' name='DeathsPercentage' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Total_Cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total_Cases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Total_Cases</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total_Deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total_Deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Total_Deaths</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DeathsPercentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DeathsPercentage]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>DeathsPercentage</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C2:no:A1:C2:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.416938' measure-ordering='alphabetic' measure-percentage='0.583062' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Sheet1 (Continent with Highest Death count)' inline='true' name='federated.1yes9y50qsxqca10an4bv02r00n3' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Continent with Highest Death count' name='excel-direct.1bcngk61tf1os01fqp7ou150udjh'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/prade/OneDrive/Desktop/Pramod/Covid19_Project/Tableau/Continent with Highest Death count.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1bcngk61tf1os01fqp7ou150udjh' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='continent' ordinal='0' />
            <column datatype='integer' name='Highest_Death_Count' ordinal='1' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>130</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Highest_Death_Count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Highest_Death_Count]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Highest_Death_Count</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B7:no:A1:B7:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[continent]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;North America&quot;' value='N. America' />
          <alias key='&quot;South America&quot;' value='S. America' />
        </aliases>
      </column>
      <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.478827' measure-ordering='alphabetic' measure-percentage='0.521173' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:continent:nk]' palette='red_10_0' type='palette'>
            <map to='#d3293d'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#d3293d'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#f05c4d'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#fa8f79'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#fa8f79'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#ffbeb2'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Sheet1 (Countries with Highest Death count)' inline='true' name='federated.0b5b2d61uyuctq1drgnhg0jlamhx' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Countries with Highest Death count' name='excel-direct.07tpn4e0zecqmh17x8fix1d21q35'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/prade/OneDrive/Desktop/Pramod/Covid19_Project/Tableau/Countries with Highest Death count.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.07tpn4e0zecqmh17x8fix1d21q35' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B236:no:A1:B236:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='Highest_Death_Count' ordinal='1' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Highest_Death_Count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Highest_Death_Count]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Highest_Death_Count</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B236:no:A1:B236:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.478827' measure-ordering='alphabetic' measure-percentage='0.521173' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Sheet1 (Total_Cases vs Population)' inline='true' name='federated.1ir51541r29dg915m0byf06uuvkh' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Total_Cases vs Population' name='excel-direct.08uiget1i9jp3d17jdk5x1qffyjk'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/prade/OneDrive/Desktop/Pramod/Covid19_Project/Tableau/Total_Cases vs Population.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.08uiget1i9jp3d17jdk5x1qffyjk' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='2'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='date' name='date' ordinal='1' />
            <column datatype='integer' name='population' ordinal='2' />
            <column datatype='integer' name='total_cases' ordinal='3' />
            <column datatype='real' name='Percentage_Population_Infected' ordinal='4' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Percentage_Population_Infected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Percentage_Population_Infected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Percentage_Population_Infected</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E10001:no:A1:E10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[location]' role='dimension' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.457655' measure-ordering='alphabetic' measure-percentage='0.542345' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tokelau&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Wales&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pitcairn&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;England&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Northern Ireland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Scotland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Sheet1 (Total_population vs vaccination)' inline='true' name='federated.1af79cj05iqbqj1gdetib1k2m7pl' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Total_population vs vaccination' name='excel-direct.1ep10bq07nvdfc13xfiih0xvcgi1'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/prade/OneDrive/Desktop/Pramod/Covid19_Project/Tableau/Total_population vs vaccination.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1ep10bq07nvdfc13xfiih0xvcgi1' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:F10001:no:A1:F10001:0' header='yes' outcome='2'>
            <column datatype='string' name='continent' ordinal='0' />
            <column datatype='string' name='location' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='population' ordinal='3' />
            <column datatype='integer' name='new_vaccinations' ordinal='4' />
            <column datatype='integer' name='Rolling_people_vaccinated' ordinal='5' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>130</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_vaccinations</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_vaccinations]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_vaccinations</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Rolling_people_vaccinated</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Rolling_people_vaccinated]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Rolling_people_vaccinated</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:F10001:no:A1:F10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.436482' measure-ordering='alphabetic' measure-percentage='0.563518' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Continent With Highest Death Counts</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Continent with Highest Death count)' name='federated.1yes9y50qsxqca10an4bv02r00n3' />
          </datasources>
          <datasource-dependencies datasource='federated.1yes9y50qsxqca10an4bv02r00n3'>
            <column datatype='integer' name='[Highest_Death_Count]' role='measure' type='quantitative' />
            <column datatype='string' name='[continent]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;North America&quot;' value='N. America' />
                <alias key='&quot;South America&quot;' value='S. America' />
              </aliases>
            </column>
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[Highest_Death_Count]' derivation='Sum' name='[sum:Highest_Death_Count:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.1yes9y50qsxqca10an4bv02r00n3].[none:continent:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;North America&quot;</bucket>
              <bucket>&quot;South America&quot;</bucket>
              <bucket>&quot;Asia&quot;</bucket>
              <bucket>&quot;Europe&quot;</bucket>
              <bucket>&quot;Africa&quot;</bucket>
              <bucket>&quot;Oceania&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1yes9y50qsxqca10an4bv02r00n3].[none:continent:nk]' value='84' />
            <format attr='color' value='#000000' />
            <format attr='vertical-align' value='top' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' scope='cols' value='#ffffff' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' value='bold' />
            <format attr='text-align' value='center' />
            <format attr='vertical-align' value='center' />
            <format attr='text-orientation' field='[federated.1yes9y50qsxqca10an4bv02r00n3].[none:continent:nk]' value='0' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-weight' value='bold' />
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='title'>
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='tooltip'>
            <format attr='color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1yes9y50qsxqca10an4bv02r00n3].[none:continent:nk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='346' />
                <format attr='maxheight' value='346' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1yes9y50qsxqca10an4bv02r00n3].[sum:Highest_Death_Count:qk]</rows>
        <cols>[federated.1yes9y50qsxqca10an4bv02r00n3].[none:continent:nk]</cols>
      </table>
      <simple-id uuid='{9DE5E822-3B85-4C99-B0D8-FF95A1903FBE}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Countries with Highest Death count)' name='federated.0b5b2d61uyuctq1drgnhg0jlamhx' />
          </datasources>
          <datasource-dependencies datasource='federated.0b5b2d61uyuctq1drgnhg0jlamhx'>
            <column datatype='integer' name='[Highest_Death_Count]' role='measure' type='quantitative' />
            <column-instance column='[Highest_Death_Count]' derivation='Avg' name='[avg:Highest_Death_Count:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[Highest_Death_Count]' derivation='Sum' name='[sum:Highest_Death_Count:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0b5b2d61uyuctq1drgnhg0jlamhx].[none:location:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([Highest_Death_Count])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:location:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0b5b2d61uyuctq1drgnhg0jlamhx].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-align' value='center' />
            <format attr='vertical-align' value='center' />
          </style-rule>
          <style-rule element='header'>
            <format attr='vertical-align' data-class='subtotal' scope='cols' value='center' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' scope='cols' value='center' />
            <format attr='text-align' scope='rows' value='center' />
            <format attr='vertical-align' scope='rows' value='center' />
            <format attr='vertical-align' scope='cols' value='center' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.0b5b2d61uyuctq1drgnhg0jlamhx].[avg:Highest_Death_Count:qk]' />
              <color column='[federated.0b5b2d61uyuctq1drgnhg0jlamhx].[avg:Highest_Death_Count:qk]' />
              <text column='[federated.0b5b2d61uyuctq1drgnhg0jlamhx].[none:location:nk]' />
              <text column='[federated.0b5b2d61uyuctq1drgnhg0jlamhx].[sum:Highest_Death_Count:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{8F18A51D-D772-44F9-9EB1-E0721806A972}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Global Number</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Global Number)' name='federated.1at2ff5096t53y196j3a5119ok1p' />
          </datasources>
          <datasource-dependencies datasource='federated.1at2ff5096t53y196j3a5119ok1p'>
            <column datatype='real' name='[DeathsPercentage]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Total_Cases]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Total_Deaths]' role='measure' type='quantitative' />
            <column-instance column='[DeathsPercentage]' derivation='Sum' name='[sum:DeathsPercentage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total_Cases]' derivation='Sum' name='[sum:Total_Cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total_Deaths]' derivation='Sum' name='[sum:Total_Deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1at2ff5096t53y196j3a5119ok1p].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1at2ff5096t53y196j3a5119ok1p].[sum:DeathsPercentage:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1at2ff5096t53y196j3a5119ok1p].[sum:Total_Cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1at2ff5096t53y196j3a5119ok1p].[sum:Total_Deaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1at2ff5096t53y196j3a5119ok1p].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1at2ff5096t53y196j3a5119ok1p].[sum:Total_Cases:qk]&quot;</bucket>
              <bucket>&quot;[federated.1at2ff5096t53y196j3a5119ok1p].[sum:Total_Deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.1at2ff5096t53y196j3a5119ok1p].[sum:DeathsPercentage:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1at2ff5096t53y196j3a5119ok1p].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1at2ff5096t53y196j3a5119ok1p].[:Measure Names]' value='215' />
            <format attr='height' value='52' />
            <format attr='text-align' value='center' />
            <format attr='text-orientation' value='0' />
            <format attr='vertical-align' value='center' />
            <format attr='font-weight' value='bold' />
            <format attr='font-size' value='10' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' value='#898989' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' value='center' />
            <format attr='vertical-align' value='center' />
            <format attr='font-size' value='14' />
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#e6ecf0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1at2ff5096t53y196j3a5119ok1p].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.1at2ff5096t53y196j3a5119ok1p].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{948FC98F-D9E8-447D-90B9-B1C6C9B27874}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Total_Cases vs Population)' name='federated.1ir51541r29dg915m0byf06uuvkh' />
          </datasources>
          <datasource-dependencies datasource='federated.1ir51541r29dg915m0byf06uuvkh'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[total_cases]' derivation='Avg' name='[avg:total_cases:qk]' pivot='key' type='quantitative' />
            <column datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ir51541r29dg915m0byf06uuvkh].[none:location:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Number of Records])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:location:nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1ir51541r29dg915m0byf06uuvkh].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1ir51541r29dg915m0byf06uuvkh].[avg:total_cases:qk]' value='n0,,M;-0,,M' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1ir51541r29dg915m0byf06uuvkh].[avg:total_cases:qk]' value='n0,,M;-0,,M' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' value='true' />
            <format attr='break-on-special' value='true' />
            <format attr='show-null-value-warning' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ir51541r29dg915m0byf06uuvkh].[none:location:nk]' />
              <lod column='[federated.1ir51541r29dg915m0byf06uuvkh].[avg:total_cases:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ir51541r29dg915m0byf06uuvkh].[avg:total_cases:qk]</rows>
        <cols>[federated.1ir51541r29dg915m0byf06uuvkh].[tmn:date:qk]</cols>
      </table>
      <simple-id uuid='{6EB7BC2E-55B6-4C21-A4DD-68BBEDD76D39}' />
    </worksheet>
    <worksheet name='Sheet 5'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Total_population vs vaccination)' name='federated.1af79cj05iqbqj1gdetib1k2m7pl' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1af79cj05iqbqj1gdetib1k2m7pl'>
            <column datatype='string' name='[continent]' role='dimension' type='nominal' />
            <column datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='integer' name='[new_vaccinations]' role='measure' type='quantitative' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[new_vaccinations]' derivation='Sum' name='[sum:new_vaccinations:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1af79cj05iqbqj1gdetib1k2m7pl].[none:continent:nk]'>
            <groupfilter from='&quot;Africa&quot;' function='range' level='[none:continent:nk]' to='&quot;South America&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1af79cj05iqbqj1gdetib1k2m7pl].[none:continent:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='font-size' value='8' />
            <format attr='text-align' field='[federated.1af79cj05iqbqj1gdetib1k2m7pl].[none:continent:nk]' value='center' />
            <format attr='vertical-align' field='[federated.1af79cj05iqbqj1gdetib1k2m7pl].[none:continent:nk]' value='center' />
            <format attr='font-weight' field='[federated.1af79cj05iqbqj1gdetib1k2m7pl].[none:continent:nk]' value='normal' />
            <format attr='font-weight' value='normal' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' field='[federated.1af79cj05iqbqj1gdetib1k2m7pl].[none:continent:nk]' value='center' />
            <format attr='vertical-align' field='[federated.1af79cj05iqbqj1gdetib1k2m7pl].[none:continent:nk]' value='center' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1af79cj05iqbqj1gdetib1k2m7pl].[none:location:nk]' value='false' />
            <format attr='break-on-special' field='[federated.1af79cj05iqbqj1gdetib1k2m7pl].[none:location:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1af79cj05iqbqj1gdetib1k2m7pl].[none:location:nk]' value='false' />
            <format attr='omit-on-special' field='[federated.1af79cj05iqbqj1gdetib1k2m7pl].[Latitude (generated)]' value='false' />
            <format attr='break-on-special' field='[federated.1af79cj05iqbqj1gdetib1k2m7pl].[Latitude (generated)]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1af79cj05iqbqj1gdetib1k2m7pl].[Latitude (generated)]' value='false' />
            <format attr='omit-on-special' field='[federated.1af79cj05iqbqj1gdetib1k2m7pl].[Longitude (generated)]' value='false' />
            <format attr='break-on-special' field='[federated.1af79cj05iqbqj1gdetib1k2m7pl].[Longitude (generated)]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1af79cj05iqbqj1gdetib1k2m7pl].[Longitude (generated)]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.1af79cj05iqbqj1gdetib1k2m7pl].[none:location:nk]' />
              <color column='[federated.1af79cj05iqbqj1gdetib1k2m7pl].[sum:new_vaccinations:qk]' />
              <geometry column='[federated.1af79cj05iqbqj1gdetib1k2m7pl].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1af79cj05iqbqj1gdetib1k2m7pl].[Latitude (generated)]</rows>
        <cols>[federated.1af79cj05iqbqj1gdetib1k2m7pl].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{80FA6E8A-2C41-45C6-9EA1-CA25BE485CF3}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98120' id='8' param='horz' type='layout-flow' w='99056' x='472' y='940'>
            <zone h='98120' id='6' type='layout-basic' w='89622' x='472' y='940'>
              <zone h='17391' id='3' name='Sheet 3' w='44811' x='472' y='940'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='44771' id='5' name='Sheet 1' w='51356' x='38738' y='54289'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='44771' id='10' name='Sheet 2' w='38266' x='472' y='54289'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='53349' id='12' name='Sheet 5' w='44811' x='45283' y='940'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='35958' id='14' name='Sheet 4' w='44811' x='472' y='18331'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98120' id='7' is-fixed='true' param='vert' type='layout-flow' w='9434' x='90094' y='940'>
              <zone h='18331' id='9' name='Sheet 1' pane-specification-id='0' param='[federated.1yes9y50qsxqca10an4bv02r00n3].[none:continent:nk]' type='color' w='9434' x='90094' y='940'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8578' id='11' name='Sheet 2' pane-specification-id='0' param='[federated.0b5b2d61uyuctq1drgnhg0jlamhx].[avg:Highest_Death_Count:qk]' type='color' w='9434' x='90094' y='19271'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8578' id='13' name='Sheet 5' pane-specification-id='5' param='[federated.1af79cj05iqbqj1gdetib1k2m7pl].[sum:new_vaccinations:qk]' type='color' w='9434' x='90094' y='27849'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='15864' id='15' name='Sheet 4' pane-specification-id='0' param='[federated.1ir51541r29dg915m0byf06uuvkh].[none:location:nk]' type='color' w='9434' x='90094' y='36427'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1600' minheight='1600' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='16' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98120' id='17' param='vert' type='layout-flow' w='99056' x='472' y='940'>
                <zone fixed-size='131' h='17391' id='3' is-fixed='true' name='Sheet 3' w='44811' x='472' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='53349' id='12' is-fixed='true' name='Sheet 5' w='44811' x='45283' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8578' id='13' name='Sheet 5' pane-specification-id='5' param='[federated.1af79cj05iqbqj1gdetib1k2m7pl].[sum:new_vaccinations:qk]' type='color' w='9434' x='90094' y='27849'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='279' h='35958' id='14' is-fixed='true' name='Sheet 4' w='44811' x='472' y='18331'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='15864' id='15' name='Sheet 4' pane-specification-id='0' param='[federated.1ir51541r29dg915m0byf06uuvkh].[none:location:nk]' type='color' w='9434' x='90094' y='36427'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44771' id='10' is-fixed='true' name='Sheet 2' w='38266' x='472' y='54289'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8578' id='11' name='Sheet 2' pane-specification-id='0' param='[federated.0b5b2d61uyuctq1drgnhg0jlamhx].[avg:Highest_Death_Count:qk]' type='color' w='9434' x='90094' y='19271'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44771' id='5' is-fixed='true' name='Sheet 1' w='51356' x='38738' y='54289'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='18331' id='9' name='Sheet 1' pane-specification-id='0' param='[federated.1yes9y50qsxqca10an4bv02r00n3].[none:continent:nk]' type='color' w='9434' x='90094' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{5B9CB822-31F7-4D00-B4B3-AEC4A704F61C}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='141'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1yes9y50qsxqca10an4bv02r00n3].[none:continent:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.1yes9y50qsxqca10an4bv02r00n3].[none:continent:nk]'>
          <bucket-selection />
        </highlight>
      </viewpoint>
      <simple-id uuid='{CA59D8E6-E03A-4F13-B135-989F1E03E1E3}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0b5b2d61uyuctq1drgnhg0jlamhx].[avg:Highest_Death_Count:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0b5b2d61uyuctq1drgnhg0jlamhx].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{64D41D91-36C8-4423-A8A1-244AB5DAAE57}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1at2ff5096t53y196j3a5119ok1p].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C6C72FED-CED0-426A-99BB-0E4D3ED1D645}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1ir51541r29dg915m0byf06uuvkh].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ir51541r29dg915m0byf06uuvkh].[my:date:ok]</field>
            <field>[federated.1ir51541r29dg915m0byf06uuvkh].[none:location:nk]</field>
            <field>[federated.1ir51541r29dg915m0byf06uuvkh].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A817AD5A-CAFB-4CCE-9835-AB4EC6784F1B}' />
    </window>
    <window class='worksheet' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='5' param='[federated.1af79cj05iqbqj1gdetib1k2m7pl].[sum:new_vaccinations:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1af79cj05iqbqj1gdetib1k2m7pl].[none:continent:nk]</field>
            <field>[federated.1af79cj05iqbqj1gdetib1k2m7pl].[none:location:nk]</field>
            <field>[federated.1af79cj05iqbqj1gdetib1k2m7pl].[sum:new_vaccinations:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{03F2231C-4732-4A10-99A2-A0B2A5C9F93E}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 2' />
        <viewpoint name='Sheet 3' />
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1ir51541r29dg915m0byf06uuvkh].[none:location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Sheet 5'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='12' />
      <simple-id uuid='{928316E0-2DF1-4BEC-A693-821B30C00344}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='76' name='Sheet 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 5' width='192'>
      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
      00mCkwAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
